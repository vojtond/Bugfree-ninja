				(op1, op2, result)
**** Numerické operace ****
ADD		+		(int, int, int) (int, double, double) (double, int, double) (double, double, double) (string, string, sting)
SUB		-		(int, int, int) (int, double, double) (double, int, double) (double, double, double)
MUL		*		(int, int, int) (int, double, double) (double, int, double) (double, double, double)
DIV		/		(int, int, double) (int, double, double) (double, int, double) (double, double, double)
POW		^		(int, int, int) (double, double, double)
ASSIGN		:=		(int, , int) (double, , double) (string, , string) (bool, , bool)

**** Logické operace ****
MORE		>		(int, int, bool) (double, double, bool) (bool, bool, bool) (string, string, bool)
LESS		<		(int, int, bool) (double, double, bool) (bool, bool, bool) (string, string, bool)
MORE_EQUAL	>=		(int, int, bool) (double, double, bool) (bool, bool, bool) (string, string, bool)
LESS_EQUAL	<=		(int, int, bool) (double, double, bool) (bool, bool, bool) (string, string, bool)
EQUAL		=		(int, int, bool) (double, double, bool) (bool, bool, bool) (string, string, bool)
NOT_EQUAL	!=		(int, int, bool) (double, double, bool) (bool, bool, bool) (string, string, bool)

**** Vestavìné funkce****
FIND		find		(string, string, int)	
SORT		sort		(string, , string)
LENGTH		délka		(string, , int)
COPY		copy		(int, int, sting)
WRITE		write		(string, , ) (double, , )
READ		read		( , , string) ( , , double)

**** Skoky ****
LABEL		návìstí		( , , , )
GOTO		skok		(pozice, , )
//FCEGOTO				
JUMP		skok		(pozice, , )
FJUMP		true skok	(pozice, bool, )
TJUMP		false skok	(pozice, bool, )
