neterminaly:
<START>
<CYKLUSW>
<VYRAZ>
<FUNKCE>
<OPERATOR>
<KDYZ>
<PRIKAZY>
<PRIRAZENI>
<ARGUMENTY>
<deklarace>
<TYP>
<BOOLEAN>
<GLOBPROM>
<DEKLARACEFC>
<TELO>
<TELOSEKVENCE>
<FUNCTION>
<FUNCTION DEFINICE>



terminaly
id
+
-
*
/
==
=>
<=
<>
while
do
if
else
:=
eol
end
function_id
integer
real
string
boolean
false
true


//AAA mam v tom zmatek!




PRAVIDLA
1		<START> 	-> 	<DEK>  <FUNC> <SLOZ> .
2		<FUNC>		->	eps
3		<FUNC> 		->	function id  (<ARG>) : <TYPE> <FORWARD> 	
4		<FORWARD> 	->	; <DEK> <SLOZ> ; <FUNC>
5		<FORWARD>	->	forward ; <FUNC>
6		<ARG> 		-> 	eps								
7 		<ARG> 		-> 	id : <TYPE> <ARGDAL>
8 		<ARGDAL> 	-> 	; id : <TYPE> <ARGDAL>
9		<ARGDAL> 	-> 	eps
10		<CYKLUS>	->	while <VYRAZ> do  <SLOZ>   
11		<KDYZ>		->  	if <VYRAZ> then  <SLOZ> <ELSE> 
12		<ELSE>		->  	else  <SLOZ>
13		<ELSE>		-> 	eps
14		<SEKVENCE>	-> 	<POKYN> <SEKVENCE>
15		<SEKVENCE>	->	eps
16		<POKYN>		->	<CYKLUS>
17		<POKYN>		->	<KDYZ>
18		<POKYN>		->	<PRIKAZ>
19		<POKYN>		->	READLN(id) 
20		<POKYN>		->	WRITE( <VYPIS>)	
21		<POKYN>		->	<SLOZ> 
22		<SLOZ>		->	begin	<PRVNI> end			
23		<PRVNI>		->	eps
24		<PRVNI>		-> 	<POKYN> <DALSI>
25		<DALSI>		->	eps
26		<DALSI>		->	; <POKYN> <PRVNI>		
27.		<PRIKAZ>	-> 	id := <VYRAZ>
28.		<DEK>		->	var id : <TYPE> ; <DEKDAL> 
29.		<DEK>		->	eps
30		<DEKDAL>	->	id : <TYPE> ;  <DEKDAL>
31		<DEKDAL>	->	eps
32.		<TYPE>		->	real
32.		<TYPE>		->	string
33.		<TYPE>		->	integer
34		<TYPE>		->	boolean
35.		<BOOLEAN>	->	true
36.		<BOOLEAN>	->	false
37.		<VYPIS>		->	id <DVYPIS>
38		<DVYPIS>	->	, <VYPIS>
39		<DVYPIS>	->	eps
	




gramatika pro hubliho 


1		<OP>		-> 	+
2		<OP>		-> 	-
3		<OP>		-> 	/
4		<OP>		-> 	*
5		<OP>		-> 	=
6		<OP>		-> 	<
7.		<OP>		-> 	>
8.		<OP>		-> 	<>
9.		<OP>		-> 	<=
10.		<OP>		-> 	>= 
20		<VYRAZ>		-> 	id
22		<VYRAZ>		->	<BOOLEAN>
23		<VYRAZ>		-> 	(<VYRAZ>)
24		<VYRAZ>		-> 	<VYRAZ> <OP> <VYRAZ>
25		<VYRAZ>		->	functionid( <ARGVOL> )	//doèasné	
54		<ARGVOL>	->	eps
55.		<ARGVOL>	->	<VYRAZ>  <ARGVOLDAL> 
56.		<ARGVOLDAL>	->	eps
57		<ARGVOLDAL>	->	, <VYRAZ>  <ARGVOLDAL>
//zastaralá nepouživaná pravidla


//49	<VYRAZ>			->	length(id : string)
//50.	<VYRAZ>			->	copy(id:string id:integer id:integer)
//51	<VYRAZ>			->	find(id:string id:string)
//52.	<VYRAZ>			->	sort(id:string)	


22.5		<vyraz>		->	TSTRING
		<vyraz>		->	TINT
		<vyraz>		->	TREAL //co takto je radši dát do doèásných promìných?


	//<START>		->	<DEKLARACE>  <DeKFC>  <FUNCTION> <SLOZ> .
12	<DEKFC>			->	eps	
	<DEKFC>			->	function id (<ARGUMENTY>) : <TYPE> forward ;  <DEKFC>	
18	<FUNCTION>		-> 	eps
19	<FUNCTION>		->	<FUNCTIONDEFINICE>   <DEKLARACE>  <SLOZ> ; <FUNCTION>
20	   <FUNCTIONDEFINICE>  	-> 	function id (<ARGUMENTY>) : <TYPE>